[
    {nkdist, [
    ]},

    {lager, [
        {handlers, [
            {lager_console_backend, info},
            {lager_file_backend, [{file, "dev/4/log/error.log"}, {level, error}]},
            {lager_file_backend, [{file, "dev/4/log/console.log"}, {level, info}]}
        ]},
        {error_logger_redirect, false},
        {crash_log, "log/crash.log"},
        {colored, true},
        {colors, [
            {debug,     "\e[0;38m" },
            {info,      "\e[0;32m" },
            {notice,    "\e[1;36m" },
            {warning,   "\e[1;33m" },
            {error,     "\e[1;31m" }
        ]}
    ]},

    {sasl, [
        {sasl_error_logger, false}
    ]},

    {riak_core, [
        {schema_dirs, ["util"]},
        {enable_consensus, false},


        %% Cluster name
        {cluster_name, "default"},

        %% Default location for ring, cluster and other data files
        {platform_data_dir, "dev/4/data"},

        %% Default ring creation size.  Make sure it is a power of 2,
        %% e.g. 16, 32, 64, 128, 256, 512 etc
        {ring_creation_size, 8},

        %% Default gossip interval (milliseconds)
        {gossip_interval, 60000},

        %% Target N value
        {target_n_val, 4},

        %% Default claims functions
        {wants_claim_fun, {riak_core_claim, default_wants_claim}},
        {choose_claim_fun, {riak_core_claim, default_choose_claim}},

        %% Vnode inactivity timeout (how often to check if fallback vnodes
        %% should return their data) in ms.
        {vnode_inactivity_timeout, 60000},

        %% Number of VNodes allowed to do handoff concurrently.
        {handoff_concurrency, 2},

        %% Disable Nagle on HTTP sockets
        {disable_http_nagle, true},

        %% Handoff IP/port
        {handoff_port, 8104},
        {handoff_ip, "0.0.0.0"},

        %% Disterl buffer sizes in bytes.
        %% These sizes (3*128*1024 & 6*128*1024) were
        %% derived from a limited amount of testing in a 
        %% 10GE environment, and may need tuning for your 
        %% network and workload. In particular they're likely
        %% too small to be optimal for larger object sizes.
        {dist_send_buf_size, 393216},
        {dist_recv_buf_size, 786432}
    ]}
].
